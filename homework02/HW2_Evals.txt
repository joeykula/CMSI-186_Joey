
Evaluation for homework 02: PiSolver

PiSolver.java program
   Includes running automated PiSolver tests
============================================

The PiSolver.java class must exist.  There needs to be a constructor that
makes a call to "super()".  There must be a "main()" method that runs the
simluation of the number of darts which are obtained from the command
line argument.  If no argument is given on the command line, there should
be an error message or usage message generated before the program quits.
For this program, error checking of the argument number is not required.

There must be a loop which executes the number of times that have been
given from the command line argument.  Either in the loop or in a separate
method [e.g. "dartThrow()"] the value of the hypotenuse of the triangle
formed from the X and Y values calculated for each throw must be calculated
and used to determine if the dart is inside or outside the circle.  There
are ten tests run which each count one point


A total of one point each for the following, except where noted:

PiSolver.java compiles  : works            -  1 point
constructor()           : works            -  1 point
inputHandling           : works            -  0 point
calculation()           : works            -  0 point
tests correct (10 pts)  : passes all tests -  9 points
One file in repo        : one present      -  1 point
Coding Style            : indenting, names -  1 point

Total possible 16 out of 16 = 100% which is an A-plus

Your score:
Your total 13 out of 16 = 81.25% which is a B-minus


Explicit comments on the exercise:
----------------------------------
The test batch file doesn't work quite right for your code.  It puts an extra
"1" character in the output somehow, but it seems to still output results to
the "testresults.txt" file, so OK.

However, looking at your code, you have a hard-coded number of darts of 1000,
which should ONLY be the default.  You will ONLY ever get the value for that
number of darts with this code, as you can see from the output all being the
same exact value.  The fact that you don't handle the input at all costs you
a point.  The fact that you get the same value for all tests also costs you
another point.

Your calculation is off as well.  YOu are never using ANYTHING that is random,
so you are NOT doing a "Monte Carlo Simulation" as was stated in the problem
statement.  That costs you another point.

Please feel free to contact me during office hours if you have questions or
would like an explanation for anything, Joey!

Your code looks very nice, and shows good craftspersonship!
