
Evaluation for homework 03: Dice Game

Die, DiceSet, and HighRoll Program
   Includes running DieAndDiceSetTestHarness
   Includes running automated HighRoll tests
============================================

The Die.java class must exist.  It needs to have a constructor that
takes one argument for the number of sides for the die object.  There
must be some sort of "roll()" method.  There must be a "getValue()"
method that returns the current value of the die.  There moust be two
"toString()" methods, one static [class] method and one instance method.
The static method must take a Die object as its argument.  There must be
a main method, which has been provided, and it must have at least one
test of the Die class in it, but preferably more [like 10].

The DiceSet.java class must exist.  There needs to be a constructor that
takes the number of dice and the number of sides as arguments.  There
must be a "sum()" method that returns the integer sum of all the dice in
the set, as well as a "roll()" method to roll all the dice in the set.
A separate "rollIndividual()" method must exist, taking one argument that
is the index of the Die object to roll.  There must be a "getIndividual()"
method to get the value of a single Die object from the set.  There needs
to be both a class method "toString()" which takes an argument which is
another DiceSet, and an instance method "toString()" which has no argument.
There must be a method "isIdentical()" which takes an argument which is
another DiceSet and returns a boolean based on whether the two sets are
considered identical.  It is your choice as to how "deep" to go when you
make the comparison.  There must be a "main()" method, which is provided
to you, but you must add at least two tests into it.

The HighRoll.java class must exist.  There needs to be a constructor for
the class that initializes the game.  You must determine the number of
dice and the number of sides from the command line, and you must check
that the input is appropriate.  Any incorrect inputs must cause the
program to output an error message before ending the program.  There must
be a TUI menu that is displayed in every iteration of the program loop,
and which must have the six selections as stated in class and on the web
page program specification.  There are two points total [1 point for
each] awarded for argument checking, which covers:

   - right number of arguments
   - arguments are of correct type after conversion [no letters]

Testing includes the 17 test sections in the provided test harness called
"DieAndDiceSetTestHarness.java" which will be run to verify the methods
all work properly and will be worth a total of 5 points.  The input to
the TUI menu must consist of the numbers of the selections, except for
the last selection which should be a 'q' for 'quit'.  The batch/shell
script file used for testing will be run on the HighRoll game and there
are 4 points awarded, one for each test.  Output from all testing will
thus be captured to a "testresults.txt" file which will be uploaded to
your repo as part of evaluation for the assignment.

There must be three files in your repo: Die.java, DiceSet.java, and the
HighRoll.java files.


A total of one point each for the following, except where noted:

class Die         : Exists, coding style acceptable   - 1 point
constructor       : works                             - 1 point
roll              : works                             - 1 point
getValue          : works                             - 1 point
instan. toString  : works                             - 1 point
class toString    : works                             - 1 point
main for testing  : Exists, with some tests in it     - 0 point

class DiceSet     : Exists, coding style acceptable   - 1 point
constructor       : works                             - 1 point
sum               : works                             - 1 point
roll              : works                             - 1 point
rollIndividual    : works                             - 1 point
getIndividual     : works                             - 1 point
instan. toString  : works                             - 1 point
class toString    : works                             - 1 point
isIdentical       : works                             - 1 point
main for testing  : Exists, with some tests in it     - 0 point

class HighRoll    : Exists, coding style acceptable   - 1 point
TUI:              : works, all options present        - 1 point
option 1 roll all : works                             - 0.5 point
option 2 roll one : works                             - 0.5 point
option 3 sum      : works                             - 0.5 point
option 4 save     : works                             - 0.5 point
option 5 display  : works                             - 0.5 point
option 6 quit     : works                             - 1 point

Files in Git      : all three present                 - 3 points
Test Harness      : passes all evaluation tests       - 5 points
HighRoll          : passes all evaluation tests       - 4 points

Total 37 out of 37 = 100% which is an A-plus

Your score:
Total 32.5 out of 37 = 87.84% which is a B-plus

Explicit comments on the exercise:
----------------------------------
You only have one file in your repo for homework03 and it is empty.

Not a lot I can do on that, except give you credit for the one file in your
repository.....

Sorry.

UPDATED 2020-10-18
==================
I still had to re-name your files.  Java source file names MUST end with the
".java" file extent.  I fixed that for you.

There was a single compile error in the Die class because you were missing a
closing curly brace at the end of the file.  I fixed that for you, too.

There are no individual tests in the Die or DiceSet classes.  However, your
HighRoll game shows that the methods work, so you earned credit there.

Your menu uses letters instead of numbers.  Numbers were specified on the
problem description and in the class lecture/discussion.  You earn 1/2 credit
for those.

You pass all the test harness tests!

I had to re-write the input test files so they used letters instead of numbers
to match your program.  Once I did that, everything works as advertised.  You
didn't earn quite as many points for the HighRoll class, but you earned full
points for the evaluation test cases.

I'm sure you'll be pleased with the results of this re-do effort, Joey!

Although it's quite a bit late, I'm not going to make an issue of that.

Nice work!

